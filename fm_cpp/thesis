基于多信号融合分解推荐模型

推荐系统简介

推荐系统是视频分享网站的一个重要组成部分．最初，它的动机是为了提高用户体验．随着
视频观看数量在互联网上的增长，推荐正在被其他领域使用，例如，内容传输，内容缓存等
类似的流媒体领域．对于普通用户而言，推荐使他们从＂信息过载＂的痛苦中拜托出来；对
于网站运营商，推荐确保它们的用户能够在网站上待得更久，从而为网站带来更多的利润．

推荐系统的核心目标是揣测用户的选择或者偏好．在众多的推荐技术中，基于模型的协同过
滤方法脱颖而出．它的基本想法是：用户和视频的交互行为受到一组隐藏的因子所控制，而
这些隐藏的因子可以从用户－视频现有的交互数据中推测而来．

大多数的推荐任务都面临着＂数据稀疏＂和＂冷启动＂的问题．当用户或者视频在网站上留
下的记录有限，为他们训练出来的模型将会变得不精确，给出的推荐结果也变得十分糟糕．
对于视频网站而言，老用户的离开和新用户的加入发生的十分频繁；并且每天都有大量的
新鲜视频会更新．因此，视频网站中总会存在大量的＂冷＂用户和视频．尽管有许多模型试
图对用户行为作出更好的解释和预测，当面对＂冷启动＂问题时，大多数方法都显得力不从
心．

当前，人们普遍的共识是＂更多的数据优于更复杂的模型＂．相关工作将注意力转移到利用
更多的数据来提高推荐效果．这类方法中通常存在多种形式的数据反馈，因此针对不同形式
的反馈会有不同的建模方式．通过某种共享机制，这些数据共同被用来训练一个模型．

[1]使用LDA从用户的评论文本中提取商品的相关主题分布，同时从购买记录中提取用户和商
品在购买行为上的隐含特征，通过将主题和隐含特征相关联，得到了可解释的推荐结果．
[2]通过关联用户在视频网站和tweeter上的数据，从tweeter文中提取用户的兴趣分布，从
而更好地指导该用户在视频网站上的推荐．

为了达到现有推荐技术的效果，关键在于建模出一组精确的隐含因子，通常将其形式化地表
示为一个d维度的特征向量，这些因子从用户的反馈数据中习得．为了构建隐含因子模型，
使用反馈数据的方式是其中的关键部分．为了建模隐式用户反馈，[3]提出了基于偏序对的
方法"BPR"，它将用户的反馈视为正例反馈，而将未交互的视频作为负例反馈．通过最大化
所有＂正例反馈的偏好大于负例反馈＂的概率，[3]为每个用户提供了一个为视频排序的模
型．我们称这类反馈数据为＂偏序信号＂．"BPR"模型试图为每个用户学习一个视频在偏好
值上的偏序关系．

推荐的目的是推测用户对物品的偏好，偏序关系是偏好的重要的一面．然而，很多时候单纯
使用偏序信号不足以挖掘出用户视频的特征，尤其是对于偏序反馈缺乏的冷视频而言更是如
此．因此，我们考虑使用与偏序信号相关的其他反馈数据．在很多场合下，数据通常表现出
一定程度的聚集效应，例如在视频网站中用户的连续观看的视频所呈现的聚集性．如果这类
反馈与偏好相关且能够反映用户的行为，那么它们将给推荐结果带来提高．

在视频推荐相关的文献中，基于最近邻的启发算法一直是现实应用场合的一个简单且有效的
方法．典型的系统部署是YouTube推荐系统[4]．它通过对所有视频建立一个＂共视图＂，在
图上应用基于图的推荐算法得到视频之间的相关性．根据用户当前观看的视频，给出与该视
频相关度最高的那些视频．其中的基本想法是：在同一次会话中，用户更倾向于观看同一类
型的视频，那么这些视频在某种程度上而言，是相似的．

我们将视频的＂共视＂当做一种聚类的信号．这类信号被YouTube用户提供相关视频推荐，
但是YouTube对每个用户做了一个全局性的推荐．为了将聚类信号结合到一个个性化的框架
中，我们同样要进行个性化聚类的建模．这里的难点在于：
１．如何对聚类信号进行个性化的建模
２．如何将不同的建模方式整合到一个推荐框架中
从[1]得到启发，我们使用隐含因子模型对偏序信号和聚类信号进行建模，将推荐问题形式化
为单类分类问题．因此，框架中存在两种信号，它们共同训练一个目标，不同信号的
模型相互耦合且共享特征向量．



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

相关工作

互联网承载着数以亿计的视频内容，在如此多的选择之下，用户极易变得无所适从．对于视
频网站而言，良好的推荐系统是它们赖以成功的关键因素．在YouTube中，提供了相关视频
的推荐服务．[5]发现在所有的YouTube的用户流量中，大部分都来自＂相关视频＂的推荐
服务．这说明，大部分人已经十分地依赖于推荐系统的功能了．

为了做出推荐，YouTube需要找出与当前观看视频最相似的视频．[4]揭示了YouTube所使用的
推荐机制，其本质上是使用一个简单有效的＂共视计数＂作为相似性的指标，对于每一对在
同一次会话中被一起观看的视频，都算一次计数．[6]扩展了＂共视＂的概念，在此之上应用
随机游走算法得出更精确的相似度计算．

另一方面，学者在个性化推荐领域也提出许多方法解决推荐问题．Netflix 大赛证实了基于
隐含因子的分解模型在效果上要优于经典的近邻算法[7]．为了进一步解决隐式反馈数据问题，
[3]进一步提出了基于偏序关系的优化方法．在此之上，[8]发现用户的偏好呈现局部性，提出
了基于局部偏好排序的系统过滤．[9]扩展了传统的二维的矩阵分解，使用三维的张量分解
在上下文感知的场景下做推荐，这类方法的一个明显缺点是：增加的维度会明显增加模型的
复杂度，从而产生＂过拟合＂问题．因为构建复杂模型容易造成＂过拟合＂问题，更多的学
者倾向于专注减少数据的稀疏性．

为了解决数据稀疏性问题，＂共分解模型＂是普遍采用的一种手段．其基本架设同样是隐含
因子，只不过不同的数据网络中的反馈由一组相关的隐含因子决定，这样达到的效果是从多
个网络中学习共同的一个目标．[10]假设用户在YouTube上的活动与其在Tweeter上的活动相
关，基本动机是用户在Tweeter上的活动相较于在YouTube上要活跃很多，从Tweeter上得到
的与用户相关的信息有助于其在YouTube上的推荐．[1]试图将购物网站上的隐含特征与商品
的评价文本上的主题分布相互对齐．[11]将用户的GPS信息融合进基于位置服务的推荐系统．
如果原始数据网络只能提供优先的反馈数据，一些相关的数据网络能够用来弥补数据缺失带
来的不足．

在本章的讨论中，我们要将我们的模型建立在＂共分解＂技术之上．跟之前工作不同之处在
于，我们的方法将使用同一个数据网络中的数据的不同方面．这样做的优点在于很自然的保
证了隐含因子的一致性（用户在不同网络中的兴趣分布往往会不同）．我们的模型同时使用
＂偏序信号＂和＂聚类信号＂，对于聚类信号，我们将其融入个性化推荐的框架．

本章的贡献如下：
１．我们通过在同一个数据源中抽取两类不同的数据信号，以解决推荐系统中普遍存在的
数据稀疏性问题．
２．我们将两种不同类型的信号融合到一个同一的推荐框架之中．
３．我们使用真实场景下的数据进行了实验，并且验证了方法的有效性．

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

排序问题

A．形式化定义
　给定一个用户和一系列视频，其中一些视频已经被该用户观看过，另外一些没看过．推荐
的任务是从未看过的视频中选择一些视频出来，使得这些视频在将来尽可能多的被该用户观
看．推荐模型针对每个（用户，视频）对，会给出该用户对视频的偏好值的一个评分．这样，
每个用户对所有视频有一系列的评分，根据这些偏好值评分给推荐提供指导．

B. 隐含因子模型
　每个用户对每个视频都会有一个偏好值评分，该评分由一个评分函数h(j|i)给出，ｉ代表
用户，ｊ代表视频,该评分函数就由模型假设的来．其中一种建模方法是隐含因子模型，其中
因子表示与评分相关的所有因素，通常由一个D维的向量表示．例如，在视频推荐领域，假设
维度D=2,那么就代表此时用户对视频的评分就由两个因素来决定．对于视频来说，它们可能
描述了该视频的喜剧成分和动作武打的成分．对于用户而言，它们就对应着用户对喜剧的喜
爱程度以及对动作武打片的喜爱程度．相对应的评分函数如下：
    h(j|i) = w_i + w_j + u_i^T v_j
其中w代表偏置项，而ｕ，ｖ则分别对应着用户和视频的隐含特征．

<< 隐含特征的图示 >>

C. 基于偏序对的学习
　基于上述的模型假设，模型参数可以从用户的反馈数据中得来．视频网站中的反馈数据一般
以隐式反馈形式出现，处理隐式数据的有效方法是采用基于偏序对的学习方法．基本想法是：
对于每个用户i, 有观看过的视频$j \in V^+(i) $ 和没看过的视频 $k \in V^-(i) $,那么
＂ｉ对于ｊ的偏好值要高过对ｋ的偏好值＂：
　<< 公式1>>
通过这些处理，我们得到一批偏序对数据 $S_D \succ U \times V \times V$:

  << 公式2>>

有了这些偏序对反馈数据之后，数据与模型的关系通过定义偏序对产生的概率从而建立起来：
　
　<< 公式3 >>

其中$ $ , h 是评分函数，最终的目标就是使得数据集的联合概率最大：
　<< 公式4 >>
因为$S_D$中包含着大量的数据，一般采用随机梯度下降的方式来训练参数．在每一轮的更新
中，对于每个用户观看过的视频ｊ，都从没看过的视频中采样一个视频ｋ，然后使用梯度下
降进行更新：
<< 公式5 >>
其中$\eta$是学习速率．这个框架被提出以专门处理隐式反馈数据，命名为＂贝叶斯个性化
排序＂．


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

聚类的引入

给定一系列视频V和有限的聚类C,标准的聚类任务将会把每个视频分配到其中一个聚类$c\inC$
中．然而，我们的目的不在于做显式的聚类划分，而仅仅是利用聚类现象中的信息．具体而
言，我们打算利用同YouTube中一样的聚类信号，将用户在视频在观看行为上的聚类现象作为
聚类的一种反馈．YouTube将聚类计数作为视频相似度的一种衡量，越高的计数值代表越高的
相似度，这种做法的结果是将所有的视频做了个全局性的聚类．然而，我们的目的是将这种
聚类反馈结合进个性化推荐的框架中，也就是说，在利用信号方面，我们希望也能达到个性
化聚类的结果，即，对不同的用户，会有不同的聚类产生．

A. 聚类模型

聚类是一个十分主观的任务，不同的人会表现出不同的聚类标准．例如，有些人会认为'哈利
波特＇系列是属于小孩子的电影，但是另外一些人会认为它仅仅是一类魔幻系列的电影，同
样适合成年人观看．为了完成一次聚类任务，我们需要知道用户在聚类上都采用哪些标准以
及它们的倾向度如何，而视频在这些标准上都体现出怎样的特性．但是直观上而言，不论用
户和视频在这些标准上展现出怎样的差异性，它们都是由一套标准所决定，不同的地方仅仅
在于一个＂度＂．

为了将一系列视频进行聚类，常见的思维模式是＂相较于其他视频，某个视频和另外一个视
频更适合聚类在一起＂．这也就是说，我们的第一步就是将视频进行两两聚类．然而，我们
的目标仅仅在于拟合聚类信号而非真实地进行聚类，能够进行两两聚类已经足够．到目前为
止，我们的目标变成了为聚类寻找一个合适的评分函数f(<j,k>|i),其中i表示用户而j,k代表
视频．

类比隐式因子协同过滤方法，我们假设在聚类信号之下存在一组控制聚类行为的隐含因子．
具体而言，如果D代表隐含因子的数量，那么每个视频由一个隐含向量$\theta \in R^D$;为
了关联两个视频，我们将每个用户由一个关联矩阵$\Lambda \in R^{D \times D}$表示．这
个矩阵用来描述用户认为不同视频之间的两个因子在聚类上有多大的相关性．由此，聚类的
评分函数定义如下：
<< 公式６>>

我们做了进一步的简化，将关联矩阵假设为对角矩阵，其中的假设是一个隐含因子只会与对应
的另一个隐含因子相关．为此，关联矩阵简化为了D维的关联向量．这样，我们的聚类模型就
与排序模型达到了一致．

B.聚类信号的截取

如之前所言，我们将视＂共视＂行为作为聚类反馈．在视频网站里，用户的观看行为都会有
对应的时间戳对应．对每个用户，我们将视频在时间轴上排序，在时间轴上维护一个时间区
间为$\delta t$的移动时间窗口．对于在时间窗内的任意两个视频$\langle j,k \rangle$,
我们取出三元组$\langle i,j,k \rangle$作为一个聚类信号，如图一所示．

$\delta t$的取值决定了对聚类的阈值以及所能获取的聚类信号的数量．我们不能将$\delta$
设置得太大，如24h．因为太大的时间窗会将多次会话中的观看行为归入一次聚类中，造成聚
类信号中混入大量噪音；我们同样不能将其值设置的太小，因为那样将得不到足够的聚类信号．

为了在精确的时间窗口和足够的反馈信号之间做权衡，在保证时间窗口足够小的同时，我们
还要保证聚类信号足够多．因此，我们从小窗口开始，寻找一个反馈数量增加最慢的截断长
度．经过多次尝试，我们选择设置$\delta t = 2 hour$．因为两次点击的间隔一般都会在
１个小时之内，一系列的点击一般都集中在２小时之内．

C.聚类信号的优化

为了与排序信号的优化保持一致，我们将聚类建模为一个分类问题，一般情况下是需要正例
和负例作为反馈的．然而，在反馈并非显式聚类反馈时候，我们容易定义正例聚类，却很难
定义出负例聚类．例如，对于我们要研究的视频网站，用户通常会在一次会话中观看一系列
视频，根据用户在一次会话中观看相似的视频的直觉，我们可以很容易地将这些视频视为一
个正例聚类．但是，如果两个视频不再同一次会话中被同时观看，我们就不能说这两个视频
对于该用户而言属于不同的聚类（负例聚类），因为太多其他因素会造成这种观看时间上的
偏移，例如：观看时间的限制；视频没有被发现；视频发布的时间不同．

受[3]的启发，我们为每个正例聚类$\langle i,j,k \rangle$随机采样未观看过的视频l，
为事件＂相较于视频对<j,l>,用户ｉ更容易将<j,k>视频对聚类在一起＂建模，事件的概率
为：
<<　公式７ >>
其中f代表聚类的评分函数．所有这些四元组$\langle i,j,k,l \rangle$组成了我们的聚类
信号的数据集$S_Y$.聚类的最终目标是最大化数据集的联合概率：
<< 公式8 >>

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

整合模型

A. 动机与直觉

在模型介绍之前，我们将就为何将偏序信号和聚类信号结合起来作出一个直观的解释．其中
的关键思想是这些信号共享一组相同的参数，聚类信号和偏序信号共同用来训练一个模型，
当偏序信号缺乏时候，这给聚类信号帮助模型训练提供了一个机会．

如图2所示，视频x与视频{s,t,y,z}紧紧地关联在一起(每次ｘ的出现都伴随着视频{s,t,y,z}
的出现),但是相对于所有的数据，x的训练数据相对较少．假设我们要对某个观看过视频{s,t,
y,z}的用户做推荐，因为视频x的高度相关性，我们希望x会被推荐.如果仅仅提供偏序信号，
那么x很难被推荐到，因为其他流行的但却相关性不强的视频会将x推送到底部．为了提升视频
x的位置，我们需要告诉系统视频x很重要．聚类信号通过在视频x和流行视频{s,t,y,z}之间
建立关联使得x趋近于这些流行视频，从而间接地提升了视频的权重，进而增加了向该用户
推荐该视频的概率．

偏序信号体现出个性化的流行度的趋势，这意味着它会更偏向于流行视频而不是相关视频，
相关视频不一定是流行的，而是主题兴趣十分相近的内容．而聚类型号更加关注相关度这一
因素，这也解释了为何聚类信号在YouTube上的成功应用．与YouTube不同的一点是，对于不
同的用户，一个视频的相关视频总会是一样的；而我们描述的相关视频对不同的用户将会有
不同的视频列表．

B. 信号的整合

图３解释了框架的整合过程．对于偏序信号，我们区分观看过的和没观看过的视频，截取出
三元素$\langle user, observed, unobserved \rangle$. 为了将其建模为分类问题，我们
使用了偏序模型和逻辑回归得到三元组这一事件的概率．因此目标函数就是所有这些事件的
联合概率，其中的参数涉及用户和视频的偏序隐含因子向量；对于聚类信号，我们使用时间
窗口来过滤出视频聚类，针对两两视频聚类进行建模．因为我们假设用户的关联矩阵是对角
矩阵，那么用户和视频同样可以用一个聚类隐含因子向量表示．通过逻辑回归和聚类模型我
们得到聚类反馈事件的概率．进一步假设聚类是相互独立的，同样得到数据集的联合概率．
同样的，我们假设偏序事件和聚类事件之间相互独立，如此就可以将两个目标整合进一个目标
函数．

<< 图３>>

到目前为之，我们有偏序反馈和聚类反馈，通过隐含因子模型将其转换成两个目标，偏序反馈
和聚类反馈各有一套隐含向量．最初我们尝试将这两组隐含向量关联，通过使用模最小化来使
得两组向量尽量相似，但是这样做的结果并不理想．最初引入聚类信号的动机是弥补数据的稀
疏从而减缓＂过拟合＂问题．然而，另外一组聚类参数使得模型又将参数的个数增加了，因为
聚类反馈数量与偏序反馈数量相当，这使得＂过拟合＂问题更加严重．为了降低模型的复杂度，
我们决定让两组参数更加耦合且让两组反馈信号使用一组隐含特征向量，这为效果带来了很大
的提升．

C. 模型描述

图4是模型的图形化表示，其中的关键部分是：为了产生两类随机事件，只与一组隐含因子向量
随机变量相关．换句化说，一旦隐含用户和视频的隐含因子向量随机变量被确定，两类事件的
分布就已经确定．图４描述了各个随机变量以及超变量之间的依赖关系，符号在表１列出．

框架的生成过程如下：

1) 对每个用户i
  a) 从分布XXX中采样一个用户隐含向量$u_i$
  b) 从分布XXX中采样视频的隐含向量$v_j,v_k$
2) 对于每个三元组$\langle i,j,k \rangle \in S_D$, 采样一个随机变量XXX
  其中XXX是＂用户i对j的偏好大于对k的偏好＂的概率：
<< 公式9 >>
其中XXX.
3) 对于每个聚类信号$\langle i,j,k,l \rangle \in S_Y$, 采样随机变量XXX
  其中XXX是＂用户i倾向将{v_j,v_k}聚类的程度高于将{v_j,v_l}聚类＂的概率：
<< 公式10 >>.

通过贝叶斯推导，我们得到如下后验概率：
<< 公式11 >>
使用最大化后验概率方法，我们得到如下目标函数：
<< 公式12 >>
其中XXX 且 XXX.

D. 参数学习

公式12包含两个组成部分，一个与偏序信号相关另一个与聚类信号相关．里面包含两个要优化
的目标，通过贝叶斯推导，它们被整合入一个目标中．这类目标函数一般使用随机梯度下降
方法(SGD)优化.通常对于包含多种优化目标的函数，一般做法是一步步分别优化：先优化其中
一个目标，然后使用优化后的参数优化另一个目标，如此迭代进行．

若严格遵从概率模型下的建模，那么两个信号被惩罚的程度一样．为了区别不同信号对模型
的贡献，我们选择对不同的信号采用不同的惩罚参数，这样做可以在参数调节上有更高的自由
度．实际情况中，对聚类信号实施更轻的惩罚能够获得较高的效果提升．

区别对待两类信号可以有如下解释：
1) 聚类信号的数量相较于偏序信号数量少许多，且聚类信号的梯度比偏序信号小许多．在我
们的实验中，当算法收敛之后，偏序信号和聚类信号的梯度大小分别为0.013和0.005.
2) 一个聚类信号比一个偏序信号包含更多有用信息．正如之前所述，＂冷视频＂问题是难以
避免的．对于这些视频，有限的偏序信号让模型过度扭曲向这些包含记录的个体．与该问题
相反的是，这些＂冷视频＂一般会与流行视频在一次会话中被观看．这就是说，冷视频总会
与流行的视频相关联，使用这种聚类关联让这些冷视频的特征跳跃到一个精确的状态(因为
这些流行的视频已经十分精确)

这样，新的目标函数如下：
<< 公式13 >>
其中XX和XX的定义如下：
XXX XXX

对于偏序信号$\langle i,j,k \rangle$, 更新规则如下：
XXX
经过一轮的偏序信号的更新，采用如下规则对聚类信号$\langle i,j,k,l \rangle$进行更新：
XXX
实际情况中，更新会一直持续到目标收敛或者到达最大更新次数．

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

实验

A. 实验设计

我们采用的数据集来自Youku,它是中国最大的视频分享网站．为了获取足够密集的用户-视频
反馈数据，我们从一段时间内最流行的视频开始抓取，从这些视频出发，我们抓取关于这些
视频的所有评论，所有抓取操作都是通过Youku的API完成．根据80-20[12]原则，观看数量
靠前的流行视频会覆盖大多数的用户．由于我们无法获取用户的观看记录，只能使用评论数据
作为一种替代品．评论一般会在用户观看完视频后被发表，因此使用评论数据比较可靠，并且
评论是比观看记录更强的一种正例反馈．

因为我们使用的是评论记录，稀疏性问题显得更加严重．具体而言，我们抓取了评论数不小于
40的3130个视频，并得到10918个用户的数据，每个用户有至少10次评论历史．整个数据集的
系数度是99.05%.值得注意的是，现在我们将会对用户的评论行为作出预测，相比于观看行为，
这会是一个更加艰巨的任务．

为了验证使用聚类信息的有效性，我们将和基于偏序的推荐模型BPR进行比较，它是我们模型
中仅包含偏序信息的那部分．

B. 参数设定
　
在推荐系统领域，人们关注的是推荐的成功率，即精确度．但是更细化的指标还会关注命中
物品的排序，希望它们的排序越高越好．为了评价算法的有效性，我们使用如下的指标：

　精准度　推荐列表中命中的视频占推荐总数的比例
　召回率　命中的视频占用户观看过的所有视频的比率
　平均准确率　精准度里考虑命中视频顺序的一个版本，信息检索中常用的一个指标

可调节的参数包括隐含因子的维度D,惩罚项的权重$\alpha$和$\beta$.为简化实验我们设
$\alpha_u = \alpha_v$, $\beta_u = \beta_v$.为了得到最优结果，设定$D = 45$.其中最
重要的参数是惩罚项，对于聚类信号的惩罚项，是定$\beta = 0.001$以尽量减少对聚类更新
步骤的惩罚．

如图５所示，我们得到了随着$\alpha$的改变得到的平均准确率的变化，横轴代表迭代次数，
纵坐标代表平均准确率取值．因为我们使用随机梯度下降优化，结果中存在着上下波动的情况．
但是长期来看，结果曲线还是呈现出上升的趋势．结果中的平均准确率先是下降，之后呈现
稳定的上升趋势，直到收敛．当我们将$\alpha$从0.04上升到0.06之后结果没有明显的改变，
因此我们将设定$\alpha=0.06$.

C. 结果分析

<< 图６>>
<< 图7 >>

在图６中我们给出了对于top-10的推荐的效果，从左到右分别对应着精准度，召回率和平均
精准度，两条曲线分别对应着BPR和我们算法的结果．对于精准度和召回率，我们只得到了
微弱的提升：分别从0.08到0.09以及从0.04到0.045.但是对于平均准确率，结果的提升非常
可观，从0.045上升到了0.075.

这个结果说明我们的算法并不会得到许多全新的命中视频,更多的实在原来的推荐列表中优化
推荐排序，它的特点在于能够放大相关度高的视频的权重，使得它们在推荐列表中的次序更高．
这点在视频推荐系统中十分关键，因为视频推荐所能提供的推荐空间非常有限．通常一次只
能有５个视频能够在推荐列表中显示，对于移动设备的用户，情况会变得更糟糕．

如图7，我们看到对于top-5的推荐结果变得更加有趣．这一次，我们的方法在三个指标中的
结果的表现都远胜过BPR的结果．相比top-5与top-10的结果，我们发现在准确率与召回率上
的提升主要的原因是：原来在5-10名的那些命中视频被准确地推送到了top-5的列表中，这
再次证明了我们的方法在推荐次序上优化的有效性．

我们观察到，当算法收敛之后，我们的方法在结果上表现得更加稳定，而BPR在结果上还存在
比较大的波动．这再一次证实了仅凭偏序信号不足以得到精确的推荐模型，从结果上看出在
搜索过程中算法还存在模棱两可的状态，然而聚类信号的引入使得这种模棱两可的状态被消除，
算法能够很明确的知道哪个解是更优的，进而表现出的结果也更加稳定．


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

本章小结

本章介绍了聚类融合的视频推荐算法．该算法融合了用户的观看聚类现象来减轻推荐中的＂冷
启动＂问题．实验结果表明我们的方法能够有效地将相关的视频推荐到推荐列表前排，鉴于
视频推荐一般仅提供有限的推荐空间，这些提升对于视频推荐有重要意义．我们的算法是
跨领域学习的一个例子，不同点在于我们从一个数据源中得到不同类型的数据．这种做法适用
于任何偏序关系和聚类现象并存的数据．































