
无线视频传输相关工作

当前，视频请求被当做独立的数据资源请求响应．每个视频请求会话使用独立的单播传输完成，
不同的视频块之间的传输被视为网页传输，使用http协议，并根据网络状况调整视频质量．
这种视频请求方法没有充分利用视频请求的一个特征：受限的请求模式．例如，视频提供商
(亚马逊,Netflix)提供有限的视频资源文件，甚至通过提供免费视频来改变视频请求模式．
简单的广播监听策略在无线视频领域不太有效，尽管用户请求表现出很明显的可复用性(相同
流行视频被反复地请求),对同一个视频请求的异步型太强，使得两个用户在短时间间隔内请求
同一文件的概率几乎为0，这种特征在视频请求中称为异步内容复用．

多年来，许多工作都利用这种受限的请求模式提出新的视频传输方案．[8]-[11]考虑用户在
同一时间请求相同内容(例如视频直播服务),但是不同的用户有不同的信道质量或者视频质量．
这种情况下，可扩展视频编码能够与某种形式的广播信道编码结合[12].另外一些工作考虑
相邻无线用户同一时刻请求相同视频，相互协作以提高下载链路吞吐量．[16]提出不同用户
同时下载相同视频的不同部分，然后通过D2D传输相互共享内容的方法．

上述工作适用于同步视频请求的场合，在异步视频请求场合就无法适用．然而，如果对每个
用户请求独立响应，将造成系统的瓶颈：在在传统的单播基站传输情况下，每个用户的吞吐量
随着用户数量的增加而线性地下降．

今年的工作表明，依赖缓存来存储视频资源是有效提高无线传输吞吐量的可靠方法．从[21]
-[24]的结果，我们观察到缓存能够使得吞吐量获得数量级上的提升．缓存给异步请求提供了
很强的复用空间，同时充分利用了移动设备上尚未完全利用的存储空间．现有的缓存工作
包括如下3类:
1.使用大量专门配置的＂帮助节点＂，其中缓存了大量的流行视频，并且通过短距离传输链路
给移动节点提供内容服务．这些帮助节点一般是含有缓存的基站，以此来代替优先传输[21]
2.将移动设备上的视频缓存与网络编码数据结合，来达到视频多播传输的目的[25]，这类方法
称为＂编码多播＂
3.将移动设备缓存与短距离D2D传输结合[22]．如此以来，尽管单独的设备只能存储有限的
视频资源．多个设备共同组成一个虚拟缓存，能够存储大量的视频.

＂编码多播＂和"D2D缓存＂拥有一个相同的有趣性质：共享虚拟缓存的容量随着系统中用户
数量的增长而线性地增长．这意味着，随着网络中用户数量的增加，聚集的缓存能力也相应
增加,这将比缓存内容于基站带来更巨大的收益．

与D2D传输结合设备缓存类似，我们试图做到使设备缓存与ad hoc传输相结合．然而本文的
关注重点不在于具体的传输模型，以及节点的移动特性．本文假设任何视频都能够在ad hoc
网络中完成视频传输，关注缓存命中率的提升．

个性化推荐系统

归功于计算机与计算机网络，我们的社会正经受着各方面的转型．我们在网上购物，使用搜索
引擎收集信息，并且在互联网上进行着大量的社交活动．这些网络活动和互动都被记录下来，
给学者更多研究社会和经济的机会,推荐系统也不例外的成为了研究的热点．推荐系统的任务是将
用户的数据和偏好转化为对将来行为的预测．推荐系统处于科学与社会经济生活的交叉路口，
其巨大的潜力最初由处于信息革命浪尖的互联网企业家发现，并逐渐渗透入各个行业．

当我们对特定用户进行推荐时，基础的方法是选择与该用户相似的其他用户也喜欢的那些物品．
即使最简单的方法也能使用多种方式来实现，这是因为推荐领域缺乏能够作出正确推荐的基础
原则．例如，我们该如何衡量用户之间的相似性以及如何衡量其不确定性？如何整合来自不同
用户的相左的意见？如何处理用户信息缺乏的那些用户？我们是否应该平等地对待每一个数据？
这些问题在更复杂的模型里面也同样存在．幸运的是，现实中我们有可以用来测试方法的真实
数据，因此，真正评价推荐算法好坏的是实验的结果．

大多数网站提供不同形式的推荐，从简单地将最流行的物品进行推荐到一些复杂的数据挖掘技术．
人们很快意识到并不存在唯一的最好的推荐方法．反而，根据当前的应用场景和数据的密度，直接
为特定应用而设计的方法更有可能成功．因此，推荐不存在万能药，我们所能做的只是理解
推荐前提和推荐机制，然后从实际例子出发解决实际问题．

由于数据存储和处理的代价的下降，推荐系统逐渐扩展到生活中大部分领域．运营商仔细研究
着我们的购买记录以推荐其他商品来提高销售量;社交网站分析我们的联系人以帮我们找到
新的朋友并使我们在网站上逗留更久；在线广播记下我们跳过的歌曲以更好地为我们服务(更多例子如表1)．
<< 表1 >>
一般而言，只要存在大量不同的商品和不同的用户，个性化推荐总能帮助我们将正确的内容
推荐给正确的人．推荐对在线网店更为重要，这些公司想利用商品的＂长尾效应＂[16]来提高利益．
例如，在亚马逊，20%到40%的产品销售量是来源于不属于前100,000的热销产品[17].因此，推荐
系统对公司的利益有巨大的影响：例如，Netflix中有60%的DVD出租是基于对用户的个性化
推荐而来．

个性化推荐技术

推荐技术在本质上没有优劣之分，随着研究的深入，有更多的推荐技术被发现，使人们面对
实际问题时候有了更多的选择，推荐技术大致上可如下分类：
１．基于内容的推荐技术：被推荐的物品是与用户之前喜欢的物品相似的物品，这里相似性
由物品内容决定，如元数据，关键词等．
２．协同过滤推荐技术：基于大量用户和物品的历史数据得出的推荐结果，基本分为
　a．基于记忆的协同过滤：同样是寻找相似的物品或者相似的用户，然后使用相似性作为加权
    最后得到偏好值
  b.基于模型的协同过滤：根据所有历史数据训练出模型，随后根据模型作出推荐
３．混合推荐技术：结合基于内容与基于协同过滤的推荐方式．

本文重点集中于基于内容的协同过滤方法，具体而言，我们关注包含维度下降技巧的推荐技术．
维度下降的目标在于降低相关数据的维度，同时保留必要的信息．这类技巧通常被应用于数据
挖掘，机器学习和聚类分析等领域．大多数的维度下降方法都包含特征向量抽取，特征向量
包含一系列的隐含因子，这些隐含因子描述了历史数据出现模式的一些原因．在观看电影的
应用场合，一个观影者可能会考虑电影的如下类别：动作，爱情或喜剧，这些考虑共同构成了
该观影者的隐含变量(即隐含特征),通常由一个多维向量表示．一个包含二维向量(动作和爱情)
的特征空间如图XXX所示，该图显示Peter在动作类电影上有一定的偏好，而Mary更喜欢关于
爱情的电影．基于同样的方法，我们可以给电影也赋予隐含变量，之后就能对用户对视频的评分
进行定义：两个向量的内积．例如，预期中我们认为Peter不喜欢电影$alpha$，而更喜欢电影
$beta$,对于Mary来说正好相反．一旦向量被计算好，推荐就能够很轻松地进行．如果我们使用
K个隐含因子，那么隐含特征响亮就是K维，那么如果$K(N+M) < NM$,那么相关的数据被大量的
减少，从而达到维度下降的效果．在实际情况中，此类方法特别适合于存储开销和计算开销
巨大的大数据集．

<< 特征空间图 >>

除了使用隐含变量来描述不同的兴趣和类别，用户和物品页可用被赋予单独的类别以达到维度
消除的效果．这种情况下，用户-物品的交互数据被用户类别与物品类别之间的关系决定．
虽然进行分类的最初目的不是为了维度消除，单类别的数量一般情况下远远小于用户或者物品
的数量，从而达到维度下降的效果．

维度下降特别适用于协同过滤场合(这有时也被成为基于模型的协同过滤)，因为一般情况下
只有一小部分的用户-物品交互数据可以被观察到，借此方法能大量减少数据量．维度下降
有效地减少了推荐的计算复杂度和内存开销，同时保留了有用的信息．一些有名的维度下降
方法包括奇异值分解(SVD)[172],贝叶斯聚类[173],概率型隐语义分析(pLSA)[174],隐含
狄利克雷分布(LDA)[175].


奇异值分解(SVD)

假设有一个$R \in N \time M$矩阵，其中每个元素$r_{i\alpha}$对应着用户$i$对物品$\alpha$的评分
(如果对应元素没有评分，那么元素值将为0).在非评分的系统中，对应的元素值变为$r_i\alpha=0,1$.
那么推荐的过程就是确定当前为0的那些元素中哪个最优可能在将来成为非0元素．对于大部分应用场合，
R都是一个及其稀疏的矩阵．

SVD的降维方法通过使用K个隐含变量来对用户喜好和物品特性进行分类，原本的矩阵R使用两个矩阵的乘积
来估计:

R 约等于 WV

其中W和V分别是维度$N \time K$和$K \time M$的矩阵．它们包含着用户的偏好信息以及物品的内容信息，
用K个隐含向量表示．由于这些隐含变量，SVD属于LSA技术的一种．从公式XXX中W和V的乘积来看，物品是
根据用户的喜好和物品的内容在特征空间中的重叠程度来选择的．因为矩阵R被分解称为两个矩阵W和V,
SVD也被称为矩阵分解方法(MF).

因为矩阵R有些元素是未知的，我们不能完美的估计原始矩阵．因此，目标就变成寻找一个$\tidle R$使得
其原始矩阵尽量相似:

\tidle R = argmin || R - \tidle R \prime ||

其中的$\tidle R \prime $被限制为秩为K的矩阵．由此，SVD提供了衡量两个矩阵$R$和$\tidle R$相似性
的简单的损失函数．求解$\tidle R$，可以使用基于梯度下降的迭代方法．矩阵中的每个元素可以使用
如下公式估计：

\tidle r_{i\alpha} = sum_{k=1}^{K}w_{ik}v{k\alpha}

除此之外，SVD还保有除了额外数据的灵活性．例如，我们可以在框架中包含用户对评分带来的偏置项．
假设用户i倾向于比其他用户多给平均$b_i$的分数，而物品$\alpha$比其他物品会多得平均意义上$b_\alpha$
的得分，那么预测分数可以表示为[182]:

<<　公式 64 >>

除了简单的偏置项，其他SVD的变体利用用户在社交网络上的关系，来描述用户喜好之间的相似性，来使得
矩阵分解获得更高的推荐精确度[183]．

另外，我们不仅可以使用评分作为唯一的输入数据．上述方法可以扩展成应用额外的信息[172].假设$d_{i\alpha}$
是一个评分对应的额外信息(例如日期).将$d_{i\alpha}$分解成一个K维向量，使用矩阵$Y \in K \time L $描述，
这些额外信息就包含了其与用户喜好和物品内容的关系，最终可用来预测评分．例如，在情人节那天，很多关于
爱情的电影就会大受欢迎，对应的评分就会变得很高．有了额外的信息，评分矩阵就能被表示为：

<< 公式 65 >>

基于梯度下降的类似推导可以应用到上面，得到最后的解．


贝叶斯聚类

在贝叶斯网络中，一个变量的取值仅依赖于其父变量．例如，一个变量的概率分布可以用一个条件概率
分布$P(x|pa_x)来描述，其中$pa_x$是变量x的父变量．多个独立的变量的联合概率可以被分解为
$P(x_1,...,x_N) = \prod_{i=1}^{N}P(x_i|pa_{x_i})$, 表示各个变量之间的依赖关系．然而，在贝叶斯
网络中最难的部分在于获取最相关的依赖结果．

为了进行个性化推荐，一个简单的实现就是进行两方面的聚类[173,184].为了获取一个(user,object)对的
评分，我们可以将用户和物品分别归入$K_{user}$和$K_{object}$个类别中，与SVD中的K一样，$K_{user}$
和$K_{object}$同样是算法的参数．这里的假设是，在现有数据分布之下，有一个贝叶斯网络控制着其生成
过程，其中最简单的假设就是评分$r_{i\alpha}$仅仅依赖于用户的分类$c_i$和物品的分类$c_\alpha$.因此
评分$r_{i\alpha}$的概率分布可以被写成：
  P(r_{i\alpha}) = sum_{c_i=1}^{K_{user}} sum_{c_\alpha = 1}^{K_object} P(r_{i\alpha}|c_i,c_\alpha)P(C_i)P(C_\alpha)
为了获取$r_{i\alpha}$的估计值，我们需要知道$P(c_i)$, $P(c_\alpha)$和$P(r_{i\alpha}|c_i,c_\alpha)$,因为评分仅
依赖于用户类别x和物品类别y,其等价于求$P(r|x,y)$

多种方法可以用来求解上述问题，例如使用"置信传播＂求取边缘估计或者使用EM算法,抑或使用吉布斯采样来估计概率分布．
当联合概率分布很难被采样，而每个变量的条件概率容易采样的时候，吉布斯采样就非常有用．这里我们需要采样的是
状态$({r|(x,y)},{c_i},{c_\alpha})$,之后就能用它们来预测评分．具体做法是：
１．首先对所有用户和物品进行随机的隐含类别分配，得到$N_x$, $N_y$ 和$N_{xy}$,它们分别对应者处于类别x的用户
数量，处于类别y的物品的数量，以及所有交互数据的类别组合的适量．
２．然后从Beta(N_{xy}+1,N_xN_y-N_{xy}+1)中采样一个$P_xy$，或者简单地使用$P_{xy} = N_{xy}/N_xN_y$来估计
３．同样的，定义$P_x$和$P_y$为一个用户和物品被归类于x或者y的概率，从狄利克雷分布中采样出$P_x$或者$P_y$,
或者简单地使用估计$P_x = N_x/N, P_y = N_y/M$ 

这些$P_xy$,$P_x$和$P_y$用来估计系统从一个状态到另一个状态的转移概率．之后，随机挑选一个用户
或者物品，使用如下分布更新其隐含类别：
<<公式66>>
<<公式67>>
对每个用户和物品更新隐含类别之后，更新$P_x$,$P_y$和$P_xy$的取值．经过足够多次迭代，就可以
开始采样用户对物品的评分：
<<公式68>>
其中$t_c$和T分别代表收敛时间和采样间隔．

这类目标极难优化的方法使用场景十分受限．例如，使用吉布斯采样需要很长的收敛时间和一段漫长的采样时间，
实际场景中，内容的更新速度极快，模型训练速度必须赶得上更新速度．


传播学习

随着社交媒体的流行，用户通常会同时活跃在不同的在线社交网站(OSN)上,不同的社交网站
也对应着不同的服务内容．例如，一个用户平时可能使用Facebook与他的好友进行交流，在
Twitter上追踪实时热点事件，订阅和观看YouTube上的流行视频，在Yelp上分享和讨论喜欢的
餐厅，等等．这些跨网络的活动共同组成了一个用户的整体在线足迹，同时从不同的方面展现了
其人口特征和兴趣爱好．

然而，典型的社交媒体服务通常只在一个在线社交网站上提供．例如，YouTube的视频推荐服务，
使用的仅仅是用户在YouTube的活动[2].使用基于单网络的解决方法的存在着一定的局限性，
用户在一个网络上的活动不足以用来推测出用户的兴趣和实时改变的偏好．冷启动和稀疏性问题
长期以来一直是困扰着实际的个性化服务部署[3]．因此，将散落在多个社交网站的用户信息
进行收集和学习，以最终服务于一个目标在线网站，是解决问题的正确方向．

<< 热度图 >>

为了验证跨网络学习的可能性，[XXX]收集了$137317$个用户的Google+账号．Google+鼓励用户
在账户信息分享其他的网站信息，作者进一步得到了对应的YouTube,Twitter,Facebook以及
Flickr的信息，发现大部分用户都在多个网站上同时拥有账户，如表[XXX]和表[XXX].为了验证
在不同平台上，用户拥有不同的活跃度，作者比较了所有用户在YouTube和Twitter上的活动数量.
如图XXX，每个用户都在图上拥有一个坐标，该图显示了所有用户活动数量分布的热度图，色相
越接近红色代表该区域内的用户数量越多．图中显示：
１．红色的区域大量集中于对角线的左上角区域，这说明用户在Twitter上的活跃度远高于
用户在YouTube上视频活动的活跃度．
２．对于只有少量视频相关活动的用户，如在x轴上$10^0-10^1$的区域，可见的twitter活动
情况在范围$10^2-10^5$内变化．这说明在YouTube上的冷启动和数据稀疏问题可以借助Twitter
上的辅助用户数据来解决.

<< 表１　>>
<<　表２ >>

一句话概括传播学习(transfer learning)，那就是使用跨网络用户建模方法，关注多个网络
数据的整合．在[13]中，作者使用用户在Flickr,Twitter和Delicious中的个人信息来解决
推荐系统中的冷启动问题．Deng等人提出个性化YouTube视频推荐解决方法，其中就利用了
用户在Google+中的个人信息[14].在[15]中，作者使用twitter的实时性和社交性来辅助
YouTube中的视频应用．在[16]中，维基页面中的权威信息被用来辅助Twitter上的事件检测．

这类跨网络协同应用的一个关键问题是如何获取多个网络中对应的账号信息，排除特殊情况，
一般情况下这类特殊关系很难得到公布和使用，因此这种方法成为了少数内部机构可以
享用的特权方法．本文在试图使用这类方法时候也遇到此类问题，因此使用了不同的信息
渠道：从一个网络中得到不同类型的信息，使用传播学习的方法整合信息，已达到推荐的
效果．虽然使用的数据源不同，却面临着相似的问题：
１．不同网络中的数据存在的异构性，而同一个网络中不同信号的数据也是异构的，
如何将异构数据服务于相同的目标是一个问题．
２．异构的数据相互之间可能存在冲突，向目标的相反方向靠近，做好不同数据之间使用的
平衡和对齐是一个问题．
总而言之，关键点在于保留数据的目标共性而排除数据间的本质差异性．



























































